<!DOCTYPE html>
<html lang="en">
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta http-equiv=Content-Type content="text/html; charset=utf-8"/>

  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons">
  <link rel="stylesheet" href="https://unpkg.com/bootstrap-material-design@4.1.1/dist/css/bootstrap-material-design.min.css" integrity="sha384-wXznGJNEXNG1NFsbm0ugrLFMQPWswR3lds2VeinahP8N0zJw9VWSopbjv2x7WCvX" crossorigin="anonymous">

  <style>
  .noselect {
    -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
    -khtml-user-select: none; /* Konqueror HTML */
    -moz-user-select: none; /* Firefox */
    -ms-user-select: none; /* Internet Explorer/Edge */
    user-select: none; /* Non-prefixed version, currently
    supported by Chrome and Opera */
  }
</style>

<title>Lajlas vinkällare</title>
</head>
<body  class="bg-light">
  <div class="container col-md-6 mx-auto">
    <div class="card mt-1">
      <img class="card-img-top" src="img/vinb.jpg" alt="Card image cap">
      <div class="card-body">
        <h5 class="card-title">Lajlas vinkällare</h5>


        <p class="card-text">Vinälskare finner alltid en eller annan anledning till att prisa vilket vin som helst. </p>
        <footer class="blockquote-footer mt-0 pt-0">Platon (427 f.Kr.-348 f.Kr.)</footer>

        <div class="dropdown-divider"></div>
        <h4 class="card-title">Klimat</h4>
        <p class="card-text">Här finner du temperaturen och relativa fuktigheten i källaren</p>


        <div class="row text-center">
          <div class="col">
            <svg class="pull-left" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="45" height="45" viewBox="0 0 24 24" fill="grey">
              <path d="M17,17A5,5 0 0,1 12,22A5,5 0 0,1 7,17C7,15.36 7.79,13.91 9,13V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V13C16.21,13.91 17,15.36 17,17M11,8V14.17C9.83,14.58 9,15.69 9,17A3,3 0 0,0 12,20A3,3 0 0,0 15,17C15,15.69 14.17,14.58 13,14.17V8H11Z" />
            </svg>
            <P   id="temperatureText"   class="h4" alt="temperature"> 0 C°</P>
          </div>

          <div class="col">
            <svg  xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="45" height="45" viewBox="0 0 24 24" fill="grey">
              <path d="M12,3.25C12,3.25 6,10 6,14C6,17.32 8.69,20 12,20A6,6 0 0,0 18,14C18,10 12,3.25 12,3.25M14.47,9.97L15.53,11.03L9.53,17.03L8.47,15.97M9.75,10A1.25,1.25 0 0,1 11,11.25A1.25,1.25 0 0,1 9.75,12.5A1.25,1.25 0 0,1 8.5,11.25A1.25,1.25 0 0,1 9.75,10M14.25,14.5A1.25,1.25 0 0,1 15.5,15.75A1.25,1.25 0 0,1 14.25,17A1.25,1.25 0 0,1 13,15.75A1.25,1.25 0 0,1 14.25,14.5Z" />
            </svg>
            <P id="humidityText" class="h4" alt="humidity">0 %</P>
          </div>
        </div>

        <div class="dropdown-divider"></div>

        <h5 class="card-title">Dörr</h5>
        <p class="card-text">Håll nere öppna eller stäng knappen för att öppna eller stänga källardörren.</p>
          <div class=" d-flex w-100">
            <button type="button" id="openButton" role="button" class="btn btn-raised btn-primary noselect  w-50 m-1">Öppna</button>
            <button type="button" id="closeButton" role="button" class="btn btn-raised btn-primary noselect w-50 m-1">Stäng</button>
          </div>

          <div class="dropdown-divider"></div>
          <div class="collapse" id="collapseExample">
              <h5 class="card-title">Överskrida ignorera klämlist</h5>
              <p class="card-text">fungerar lika  som andra kontrollerna men Observera ignorerar klämlisten.</p>
            <div class="d-flex w-100">
               <button type="button" id="FopenButton" role="button" class="btn btn-danger btn-raised btn-primary noselect  w-50 m-1">Öppna</button>
                <button type="button" id="FcloseButton" role="button" class="btn btn-danger btn-raised btn-primary noselect w-50 m-1">Stäng</button>        
                </div>
          </div>
          <button class="btn btn-primary float-right btn-raised btn-info noselect" type="button" data-toggle="collapse" data-target="#collapseExample"  aria-expanded="false" aria-controls="collapseExample">
            överskrida dörr
          </button>
        </div>
        <div class="card-footer">
          <p class="card-text"><small class="text-muted">Hemsidan är gjord av Alexander af Trolle</small></p>
        </div>
      </div>
    </div>


    <script src="https://code.jquery.com/jquery-3.3.1.min.js"  integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
    <script src="https://unpkg.com/popper.js@1.12.6/dist/umd/popper.js" integrity="sha384-fA23ZRQ3G/J53mElWqVJEGJzU0sTs+SvzG8fXVWP+kJQ1lwFAOkcUOysnlKJC33U" crossorigin="anonymous"></script>
    <script src="https://unpkg.com/bootstrap-material-design@4.1.1/dist/js/bootstrap-material-design.js" integrity="sha384-CauSuKpEqAFajSpkdjv3z9t8E7RlpJ1UP0lKM/+NdtSarroVKu069AlsRPKkFBz9" crossorigin="anonymous"></script>
    <script>$(document).ready(function() { $('body').bootstrapMaterialDesign(); });</script>


    <script type=text/javascript>


    function getHiddenProp(){
      var prefixes = ['webkit','moz','ms','o'];

      // if 'hidden' is natively supported just return it
      if ('hidden' in document) return 'hidden';

      // otherwise loop over all the known prefixes until we find one
      for (var i = 0; i < prefixes.length; i++){
        if ((prefixes[i] + 'Hidden') in document)
        return prefixes[i] + 'Hidden';
      }

      // otherwise it's not supported
      return null;
    }

    function isHidden() {
      var prop = getHiddenProp();
      if (!prop) return false;
      return document[prop];
    }

    function visChange() {
      if (isHidden()){
        buttonReleased();
      }
    }

    function round(value, precision) {
      var multiplier = Math.pow(10, precision || 0);
      return Math.round(value * multiplier) / multiplier;
    }

    $.getJSON("/weather", function( data ) {
      var temp = data.temperature;
      $("#temperatureText").text( round(temp, 1).toFixed(1)  + ' C°');
      var hum = data.humidity;
      $("#humidityText").text( round(hum, 1).toFixed(1) + ' %');
    });

    var timeoutVariable = null;

    function buttonReleased(){
      if (timeoutVariable !== null){
        window.clearTimeout(timeoutVariable);
        timeoutVariable = null;
      }
    }

    function closeButton(){
      if (timeoutVariable === null){
        timeoutVariable = setInterval(function(){
          $.post( "/close", function( data ) {
            var response = jQuery.parseJSON(data);
            if (response.status != 200){
              buttonReleased();
              alert(response.message);
            }
            //console.println(data);
          }).fail(function() {
            buttonReleased();
            alert("åh nej något gick fel");
          });
        }, 250);
      }
    }

    function openButtonPressed(){
      if (timeoutVariable === null){
        timeoutVariable = setInterval(function(){
          $.post( "/open", function( data ) {
            var response = jQuery.parseJSON(data);
            if (response.status != 200){
              buttonReleased();
              alert(response.message);
            }
            //console.println(data);
          }).fail(function() {
            buttonReleased();
            alert("åh nej något gick fel");
          });
        }, 250);
      }
    }

    function FopenButtonPressed(){
      if (timeoutVariable === null){
        timeoutVariable = setInterval(function(){
          $.post( "/fopen", function( data ) {
            var response = jQuery.parseJSON(data);
            if (response.status != 200){
              buttonReleased();
              alert(response.message);
            }
            //console.println(data);
          }).fail(function() {
            buttonReleased();
            alert("åh nej något gick fel");
          });
        }, 250);
      }
    }
    function FcloseButton(){
      if (timeoutVariable === null){
        timeoutVariable = setInterval(function(){
          $.post( "/fclose", function( data ) {
            var response = jQuery.parseJSON(data);
            if (response.status != 200){
              buttonReleased();
              alert(response.message);
            }
            //console.println(data);
          }).fail(function() {
            buttonReleased();
            alert("åh nej något gick fel");
          });
        }, 250);
      }
    }

    //document ready
    $(function() {
      console.log( "ready!" );

      $( "#openButton" )
      .on('touchstart mousedown',openButtonPressed)
      .on('touchcancel touchend touchleave mouseup mouseleave',buttonReleased);

      $( "#closeButton" )
      .on('touchstart mousedown',closeButton)
      .on('touchcancel touchend touchleave mouseup mouseleave',buttonReleased);

      $( "#FopenButton" )
      .on('touchstart mousedown',FopenButtonPressed)
      .on('touchcancel touchend touchleave mouseup mouseleave',buttonReleased);

      $( "#FcloseButton" )
      .on('touchstart mousedown',FcloseButton)
      .on('touchcancel touchend touchleave mouseup mouseleave',buttonReleased);

      $(window).on("unload beforeunload",buttonReleased);
    });

    var visProp = getHiddenProp();
    if (visProp) {
      var evtname = visProp.replace(/[H|h]idden/,'') + 'visibilitychange';
      document.addEventListener(evtname, visChange);
    }

    </script>
  </body>
  </html>
